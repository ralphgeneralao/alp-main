/*--------------------------------

Nucleo icon font
Generated using nucleoapp.com

-------------------------------- */

$icon-font-path: "../fonts" !default;

@font-face {
  font-family: 'Nucleo';
  src: url('#{$icon-font-path}/Nucleo.eot');
  src: url('#{$icon-font-path}/Nucleo.eot') format('embedded-opentype'),
       url('#{$icon-font-path}/Nucleo.woff2') format('woff2'),
       url('#{$icon-font-path}/Nucleo.woff') format('woff'),
       url('#{$icon-font-path}/Nucleo.ttf') format('truetype'),
       url('#{$icon-font-path}/Nucleo.svg') format('svg');
}

/* base class */
.icon {
  display: inline-block;
  font: normal normal normal 1em/1 'Nucleo';
  color: inherit;
  flex-shrink: 0;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* size examples - relative units */
.icon-sm {
  font-size: 0.8em;
}

.icon-lg {
  font-size: 1.2em;
}

/* size examples - absolute units */
.icon-16 {
  font-size: 16px;
}

.icon-32 {
  font-size: 32px;
}

/* rotate the icon infinitely */
.icon-is-spinning {
  animation: icon-spin 1s infinite linear;
}

@keyframes icon-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* transform */
.icon-rotate-90  {
	transform: rotate(90deg);
}

.icon-rotate-180 {
	transform: rotate(180deg);
}

.icon-rotate-270 {
	transform: rotate(270deg);
}

.icon-flip-y {
	transform: scaleY(-1);
}

.icon-flip-x {
	transform: scaleX(-1);
}

/* icons */
$icons: (
  'alp-fb': 'ea01',
  'alp-instagram': 'ea02',
  'alp-linkedin': 'ea03',
  'alp-youtube': 'ea04',
  'alp_logo_login_notext': 'ea05',
  'arrow-forward': 'ea06',
  'book-open': 'ea07',
  'chevron-down': 'ea08',
  'chevron-up': 'ea09',
  'circle-user': 'ea0a',
  'close': 'ea0b',
  'comment': 'ea0c',
  'envelope-regular': 'ea10',
  'envelope': 'ea0e',
  'eye-slash': 'ea0d',
  'eye': 'ea0f',
  'hexagon': 'ea11',
  'home': 'ea12',
  'info-circle': 'ea13',
  'key-outline': 'ea16',
  'key': 'ea14',
  'lock-closed': 'ea15',
  'lock': 'ea18',
  'logout': 'ea17',
  'mark_email_read': 'ea19',
  'person_outline': 'ea1a',
  'screen-users': 'ea1c',
  'star': 'ea1b',
  'student': 'ea1d',
  'subscriber': 'ea1e',
  'subsite-4td': 'ea2a',
  'subsite-dvr': 'ea24',
  'subsite-plr': 'ea29',
  'subsite-slr': 'ea1f',
  'subsite-tr': 'ea20',
  'supervisor': 'ea21',
  'tag': 'ea22',
  'toga': 'ea23',
  'toga_outline': 'ea25',
  'toga_regular': 'ea26',
  'user-regular': 'ea27',
  'user': 'ea28',
);

@function unicode($str) {
  @return unquote("\"\\#{$str}\"");
}

@each $name, $code in $icons {
  .icon-#{""+$name}::before {
    content: unicode($code);
  }
}